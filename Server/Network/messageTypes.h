#ifndef MESSAGETYPES_H
#define MESSAGETYPES_H
namespace Mafia {
    namespace Network {
        enum MessageType{
            //! \brief Нижняя граница типов сообщений
            MessageType_First = 1,
            //! \brief Просто текстовое сообщение
            MessageType_Text = 1,
            //! \brief Текстовое сообщение, не требующее подтверждения
            MessageType_NoConfirmText = 2,
            //! \brief Подтверждающее сообщение
            MessageType_Confirmation = 3,
            //! \brief Сообщение с ответом на запрос
            MessageType_RequestAnswer = 4,
            //! \brief Сообщение с абстрактным (каким-то) запросом. Пока сделано просто для тестов
            MessageType_AbstractRequest = 5,
            //! \brief Сообщение для передачи субсерверу клиента
            MessageType_PassClientRequest = 6,
            //! \brief Сообщение для проверки соединения (с субсерверами и с клиентами)
            MessageType_CheckConnection = 7,
            //! \brief Сообщение для проверки соединения с основным сервером (отправляется субсервером-восстановителем)
            MessageType_CheckConnectionServer = 8,
            //! \brief Сообщение для отправки сообщения в чат
            MessageType_SendChatMessage = 9,
            //! \brief Сообщение для изменения сообщения в чате
            MessageType_EditChatMessage = 10,
            //! \brief Сообщение для удаления сообщения из чата
            MessageType_DeleteChatMessage = 11,
            //! \brief Сообщение для уведомление о том, что игрок прочитал сообщение
            MessageType_ReadChatMessage = 12,
            //! \brief Сообщение, говорящее о том, что не удалось создать пользователя с такими данными (скорее всего это связано с тем, что email уже занят)
            MessageType_UnableToCreateUser = 13,
            //! \brief Сообщение, говорящее о том, что пользователь успешно вошел (сообщение имеет такую структуру:
            //! 4 байта - int, id пользователя, далее все остальные байты - email, под которым вошел пользователь)
            MessageType_LoggedIn = 14,
            //! \brief Сообщение, сообщающее о том, что пользователь успешно вышел из аккаунта (в сообщении не передается ничего)
            MessageType_LoggedOut = 15,
            //! \brief Сообщение, говорящее о том, что у пользователя недостаточно прав для совершения запрашиваемой операции
            //! (в сообщении строкой передается причина, по которой пользователь не получил разрешения)
            MessageType_AccessDenied = 16,
            //! \brief Сообщение, которое отправляется субсервером, чтобы получить последние сообщения из какого-либо чата
            MessageType_GetChatMessages = 17,
            //! \brief Сообщение, в котором передаются последние сообщения чата (начиная с самого последнего и сортированы по убыванию даты)
            //! Структура сообщения - это список \ref Mafia::Database::ChatMessage , сериализованный системным сериализатором
            MessageType_LastChatMessages = 18,
            //! \brief Сообщение, в котором передаются чаты пользователя (могут передаваться не все чаты)
            //! они отсортированы в порядке убывания даты последнего сообщения в этом чате и гарантируется, что передаются чаты,
            //! в которых сообщения были самыми последними
            MessageType_Chats = 19,
            //! \brief Сообщение, которое отправляется пользователю при получении нового достижения (нашивки)
            MessageType_AchievementChange = 20,
            //! \brief Сообщение, которое отправляет субсервер-комната основному серверу, если пользователь покидает комнату
            MessageType_PlayerLeaveGame = 21,
            //! \brief Сообщение, в котором субсервер передает основному серверу результаты завершившейся игры
            MessageType_GameResults = 22,
            //! \brief Сообщение, которое сервер отправляет клиенту, когда тот должен перейти на новый сервер
            MessageType_ChangeServer = 23,
            //! \brief Сообщение, которое отправляется клиенту, который создал игру
            //! (в сообщении хранится ключ игры, который надо ввести для подключения)
            MessageType_GameCreated = 24,
            //! \brief Сообщение, которое отправляется игроку, который ввел неверный ключ для входа в игру
            MessageType_InvalidGameKey = 25,
            //! \brief Сообщение, которое клиент отправляет для регистрации нового пользователя
            //! Структура сообщения : строка - никнейм, затем без пробела строка - email, затем так же строка - пароль
            //! Каждая строка сериализуется стандартным сериализатором (\ref Mafia::System::Serializer)
            //! как длина строки + сама строка
            //! Это сообщение - запрос. Если создание пользователя успешно, то будет отправлено сообщение, в котором будут
            //! содержаться id пользователя и email, под которым он вошел
            //! Также если пользователь был залогинен под какой-то учетной записью при создании новой, ему придет сообщение о
            //! выходе из той учетной записи
            //! Если создать пользователя не удалось, будет отправлена пустая строка
            MessageType_CreateUser = 26,
            //! \brief Сообщения для входа в систему под конкретной учетной записью
            //! Структура сообщения : строка - email, строка - пароль.
            //! Это сообщение - запрос. Ответом на него служит сообщение с подтверждением или отрицанием входа.
            //! Если пользователь успешно вошел, ему придет сообщение с id и email пользователя,
            //! Если вход неудачен, придет пустая строка
            MessageType_LoginRequest = 27,
            //! \brief Сообщение для создания нового чата. В сообщении не передается ничего
            //! Это сообщение - запрос. Если создания прошло успешно, будет отправлено сообщение с id созданного чата
            MessageType_CreateChatRequest = 28,
            //! \brief Сообщение для получения всех чатов пользователя. В сообщении необходимо передать количество чатов,
            //! которые ожидается получить. Если у пользователя меньше чатов, то будет возвращено меньшее количество
            //! Возвращается сообщение с массивом чатов, сериализованным стандартным сериализатором
            MessageType_GetChatsRequest = 29,
            //! \brief Сообщение для добавления пользователя в чат
            //! Структура сообщения : id чата, id пользователя, должность пользователя
            MessageType_AddUserToChat = 30,
            //! \brief Сообщение для изменения должности пользователя в чате
            //! Структура сообщения:
            //! id чата, id пользователя, новая должность пользователя
            MessageType_ChangeUsersCapability = 31,
            //! \brief Сообщение удаления пользователя из чата.
            //! Структура сообщения : id чата, id пользователя, которого следует удалить
            MessageType_RemoveUserFromChat = 32,
            //! \brief Сообщение для создания игры В сообщении не передается ничего
            //! Возвращается в сообщении ключ для входа в игру (создатель игры автоматически перенаправляется в игру)
            MessageType_CreateGameRequest = 33,
            //! \brief Сообщения для получения статистики какого-то игрока
            //! Структура сообщения : id пользователя
            //! Это сообщение - запрос. Поэтому на него будет отправлено сообщение, в котором сериализована структура
            //! \ref Mafia::UserStatistics
            MessageType_GetStatisticsRequest = 34,
            //! \brief Сообщения для подтверждения адреса электронной почты
            //! Структура сообщения : строка - ключ подтверждения
            //! В качестве ответа приходит сообщение, в котором сериализована булевая переменная, которая равна true, если почта
            //! подтверждена и иначе false
            MessageType_ConfirmEmail = 35,
            //! \brief Сообщение для выхода из аккаунта. В сообщении не передается ничего, ничего не возвращается
            MessageType_Logout = 36,
            //! \brief Сообщение, в котором передаются логи, которые пользователь сохранил за предыдущую игру.
            //! Структура сообщения : строка, в которой переданы логи
            MessageType_LogsData = 37,
            //! \brief Сообщение для изменения никнейма
            //! Структура сообщения : строка с новым никнеймом
            MessageType_ChangeNickname = 38,
            //! \brief Сообщение для изменения email-a
            //! Структура сообщения : строка с новым email-ом
            //! Это сообщение - запрос. В ответ отправляется сообщение с сериализованной булевой переменной, которая отвечает на
            //! вопрос: успешно ли изменен email?
            MessageType_ChangeEmailRequest = 39,
            //! \brief Сообщение для входа в игру. Структура сообщения : строка-ключ для входа
            MessageType_GetIntoGameRequest = 40,
            //! \brief Сообщение, которое приходит всем онлайн пользователям, состоящим в каком-либо чате, в который приходит
            //! новое сообщение
            MessageType_NewChatMessage = 41,
            //! \brief Сообщение, которое приходит всем онлайн пользователям, состоящим в каком-либо чате, в котором изменяется
            //! какое-либо сообщение
            MessageType_EditedChatMessage = 42,
            //! \brief Сообщение, которое приходит всем онлайн пользователям, состоящим в каком-либо чате, в котором удаляется
            //! какое-либо сообщение
            MessageType_DeletedChatMessage = 43,
            //! \brief Сообщение, которое приходит всем онлайн пользователям, состоящим в каком-либо чате,
            //! когда кто-либо прочитывает какое-либо сообщение этого чата
            MessageType_OnReadChatMessage = 44,
            //! \brief Верхняя граница типов сообщений
            MessageType_Last = 45
        };


    }
}

#endif // MESSAGETYPES_H
